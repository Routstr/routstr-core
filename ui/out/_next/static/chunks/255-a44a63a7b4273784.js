"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[255],{2738:(e,t,r)=>{r.d(t,{BT:()=>d,Wu:()=>l,ZB:()=>s,Zp:()=>a,aR:()=>n,wL:()=>p});var i=r(3422);r(4398);var o=r(9183);function a(e){let{className:t,...r}=e;return(0,i.jsx)("div",{"data-slot":"card",className:(0,o.cn)("bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm",t),...r})}function n(e){let{className:t,...r}=e;return(0,i.jsx)("div",{"data-slot":"card-header",className:(0,o.cn)("@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6",t),...r})}function s(e){let{className:t,...r}=e;return(0,i.jsx)("div",{"data-slot":"card-title",className:(0,o.cn)("leading-none font-semibold",t),...r})}function d(e){let{className:t,...r}=e;return(0,i.jsx)("div",{"data-slot":"card-description",className:(0,o.cn)("text-muted-foreground text-sm",t),...r})}function l(e){let{className:t,...r}=e;return(0,i.jsx)("div",{"data-slot":"card-content",className:(0,o.cn)("px-6",t),...r})}function p(e){let{className:t,...r}=e;return(0,i.jsx)("div",{"data-slot":"card-footer",className:(0,o.cn)("flex items-center px-6 [.border-t]:pt-6",t),...r})}},3130:(e,t,r)=>{r.d(t,{J:()=>n});var i=r(3422);r(4398);var o=r(2996),a=r(9183);function n(e){let{className:t,...r}=e;return(0,i.jsx)(o.b,{"data-slot":"label",className:(0,a.cn)("flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50",t),...r})}},6839:(e,t,r)=>{r.d(t,{Xi:()=>d,av:()=>l,j7:()=>s,tU:()=>n});var i=r(3422);r(4398);var o=r(1749),a=r(9183);function n(e){let{className:t,...r}=e;return(0,i.jsx)(o.bL,{"data-slot":"tabs",className:(0,a.cn)("flex flex-col gap-2",t),...r})}function s(e){let{className:t,...r}=e;return(0,i.jsx)(o.B8,{"data-slot":"tabs-list",className:(0,a.cn)("bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]",t),...r})}function d(e){let{className:t,...r}=e;return(0,i.jsx)(o.l9,{"data-slot":"tabs-trigger",className:(0,a.cn)("data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",t),...r})}function l(e){let{className:t,...r}=e;return(0,i.jsx)(o.UC,{"data-slot":"tabs-content",className:(0,a.cn)("flex-1 outline-none",t),...r})}},8561:(e,t,r)=>{r.d(t,{E:()=>s});var i=r(3422);r(4398);var o=r(4676),a=r(9183);let n=(0,o.F)("inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",{variants:{variant:{default:"border-transparent bg-primary text-primary-foreground hover:bg-primary/80",secondary:"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",destructive:"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",outline:"text-foreground",success:"border-transparent bg-green-500 text-white hover:bg-green-500/80",warning:"border-transparent bg-yellow-500 text-white hover:bg-yellow-500/80",error:"border-transparent bg-red-500 text-white hover:bg-red-500/80"}},defaultVariants:{variant:"default"}});function s(e){let{className:t,variant:r,...o}=e;return(0,i.jsx)("div",{className:(0,a.cn)(n({variant:r}),t),...o})}},9119:(e,t,r)=>{r.d(t,{zQ:()=>d});var i=r(7916),o=r(9945);o.Ik({id:o.ai(),provider_type:o.Yj(),base_url:o.Yj(),api_key:o.Yj().optional(),api_version:o.Yj().nullable().optional(),enabled:o.zM(),provider_fee:o.ai().optional()}),o.Ik({provider_type:o.Yj(),base_url:o.Yj(),api_key:o.Yj(),api_version:o.Yj().nullable().optional(),enabled:o.zM().default(!0),provider_fee:o.ai().optional()}),o.Ik({provider_type:o.Yj().optional(),base_url:o.Yj().optional(),api_key:o.Yj().optional(),api_version:o.Yj().nullable().optional(),enabled:o.zM().optional(),provider_fee:o.ai().optional()});let a=o.Ik({prompt:o.ai().optional(),completion:o.ai().optional(),request:o.ai().optional(),image:o.ai().optional(),web_search:o.ai().optional(),internal_reasoning:o.ai().optional()}),n=o.Ik({modality:o.Yj().optional(),input_modalities:o.YO(o.Yj()).optional(),output_modalities:o.YO(o.Yj()).optional(),tokenizer:o.Yj().optional(),instruct_type:o.Yj().nullable().optional()}),s=o.Ik({id:o.Yj(),name:o.Yj(),description:o.Yj(),created:o.ai(),context_length:o.ai(),architecture:n.or(o.g1(o.bz())),pricing:a.or(o.g1(o.bz())),per_request_limits:o.g1(o.bz()).nullable().optional(),top_provider:o.g1(o.bz()).nullable().optional(),upstream_provider_id:o.ai().nullable().optional(),enabled:o.zM().default(!0)});o.Ik({provider:o.Ik({id:o.ai(),provider_type:o.Yj(),base_url:o.Yj()}),db_models:o.YO(s),remote_models:o.YO(s)});class d{static convertPricingToPerMillionTokens(e){if(!e)return e;let t={...e};return"number"==typeof t.prompt&&(t.prompt=1e6*t.prompt),"number"==typeof t.completion&&(t.completion=1e6*t.completion),"number"==typeof t.request&&(t.request=1e6*t.request),"number"==typeof t.image&&(t.image=1e6*t.image),t}static convertPricingToPerToken(e){if(!e)return e;let t={...e};return"number"==typeof t.prompt&&(t.prompt=t.prompt/1e6),"number"==typeof t.completion&&(t.completion=t.completion/1e6),"number"==typeof t.request&&(t.request=t.request/1e6),"number"==typeof t.image&&(t.image=t.image/1e6),t}static transformAdminModelToModel(e,t){var r,i;let o=this.convertPricingToPerMillionTokens(e.pricing),a=(null==o?void 0:o.prompt)||0,n=(null==o?void 0:o.completion)||0,s=(null==o?void 0:o.request)||0;return{id:e.id,name:e.name,full_name:e.name,description:e.description,modelType:(null==(r=e.architecture)?void 0:r.modality)||"text",isEnabled:e.enabled,createdAt:new Date(1e3*e.created).toISOString(),updatedAt:new Date(1e3*e.created).toISOString(),provider:t||"Unknown",url:"",api_key:void 0,input_cost:a,output_cost:n,min_cost_per_request:s,min_cash_per_request:0,contextLength:e.context_length,apiKeyRequired:!0,provider_id:null==(i=e.upstream_provider_id)?void 0:i.toString(),is_free:0===a&&0===n,soft_deleted:!e.enabled,has_own_api_key:!1,api_key_type:"group"}}static transformModelToAdminModel(e){let t=this.convertPricingToPerToken({prompt:e.input_cost,completion:e.output_cost,request:e.min_cost_per_request,image:0,web_search:0,internal_reasoning:0});return{id:e.id,name:e.name,description:e.description||"",created:Math.floor(new Date(e.createdAt).getTime()/1e3),context_length:e.contextLength||0,architecture:{modality:e.modelType,input_modalities:[e.modelType],output_modalities:[e.modelType],tokenizer:"",instruct_type:null},pricing:t,per_request_limits:null,top_provider:null,upstream_provider_id:e.provider_id?parseInt(e.provider_id):null,enabled:e.isEnabled}}static async getUpstreamProviders(){return await i.apiClient.get("/admin/api/upstream-providers")}static async getUpstreamProvider(e){return await i.apiClient.get("/admin/api/upstream-providers/".concat(e))}static async createUpstreamProvider(e){return await i.apiClient.post("/admin/api/upstream-providers",e)}static async updateUpstreamProvider(e,t){return await i.apiClient.patch("/admin/api/upstream-providers/".concat(e),t)}static async deleteUpstreamProvider(e){return await i.apiClient.delete("/admin/api/upstream-providers/".concat(e))}static async getProviderModels(e){return await i.apiClient.get("/admin/api/upstream-providers/".concat(e,"/models"))}static async createProviderModel(e,t){let r={...t,pricing:this.convertPricingToPerToken(t.pricing)};console.log("Creating provider model - pricing conversion:",{original:t.pricing,converted:r.pricing});let o=await i.apiClient.post("/admin/api/upstream-providers/".concat(e,"/models"),r);return{...o,pricing:this.convertPricingToPerMillionTokens(o.pricing)}}static async getProviderModel(e,t){let r=await i.apiClient.get("/admin/api/upstream-providers/".concat(e,"/models/").concat(encodeURIComponent(t)));return{...r,pricing:this.convertPricingToPerMillionTokens(r.pricing)}}static async getModel(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,r=await i.apiClient.post("/admin/api/models/get",{model_id:e,provider_id:t});return{...r,pricing:this.convertPricingToPerMillionTokens(r.pricing)}}static async updateProviderModel(e,t,r){let o={...r,pricing:this.convertPricingToPerToken(r.pricing)};console.log("Updating provider model - pricing conversion:",{original:r.pricing,converted:o.pricing});let a=await i.apiClient.patch("/admin/api/upstream-providers/".concat(e,"/models/").concat(encodeURIComponent(t)),o);return{...a,pricing:this.convertPricingToPerMillionTokens(a.pricing)}}static async deleteProviderModel(e,t){return await i.apiClient.delete("/admin/api/upstream-providers/".concat(e,"/models/").concat(encodeURIComponent(t)))}static async deleteAllProviderModels(e){return await i.apiClient.delete("/admin/api/upstream-providers/".concat(e,"/models"))}static async getModelsWithProviders(){let e=await this.getUpstreamProviders(),t=e.map(e=>({id:e.id.toString(),provider:e.provider_type,group_api_key:e.api_key,group_url:e.base_url,created_at:new Date().toISOString(),updated_at:new Date().toISOString()})),r=[],i=new Set;for(let t of e)try{let e=await this.getProviderModels(t.id);e.db_models.forEach(e=>{i.add(e.id);let o={...e,upstream_provider_id:t.id};r.push({...this.transformAdminModelToModel(o,t.provider_type),has_own_api_key:!1,api_key_type:"group"})}),e.remote_models.forEach(e=>{if(!i.has(e.id)){let i={...e,upstream_provider_id:t.id};r.push({...this.transformAdminModelToModel(i,t.provider_type),has_own_api_key:!1,api_key_type:"remote",soft_deleted:!1})}})}catch(e){console.error("Failed to fetch models for provider ".concat(t.id,":"),e)}return{models:r,groups:t}}static async createModelGroup(e){let t=await this.createUpstreamProvider({provider_type:e.provider,base_url:e.group_url||"",api_key:e.group_api_key||"",enabled:!0});return{id:t.id.toString(),provider:t.provider_type,group_api_key:t.api_key,group_url:t.base_url,created_at:new Date().toISOString(),updated_at:new Date().toISOString()}}static async updateModelGroup(e,t){let r=await this.updateUpstreamProvider(parseInt(e),{provider_type:t.provider,base_url:t.group_url,api_key:t.group_api_key});return{id:r.id.toString(),provider:r.provider_type,group_api_key:r.api_key,group_url:r.base_url,created_at:new Date().toISOString(),updated_at:new Date().toISOString()}}static async createModel(e){let t=e.provider_id?parseInt(e.provider_id):null,r={prompt:e.input_cost/1e6,completion:e.output_cost/1e6,request:e.min_cost_per_request||0,image:0,web_search:0,internal_reasoning:0},o={model_id:e.id||e.full_name,provider_id:t,name:e.name||e.full_name,description:e.description||"",created:Math.floor(Date.now()/1e3),context_length:e.contextLength||0,architecture:{modality:e.modelType||"text",input_modalities:[e.modelType||"text"],output_modalities:[e.modelType||"text"],tokenizer:"",instruct_type:null},pricing:this.convertPricingToPerToken(r),per_request_limits:null,top_provider:null,enabled:!1!==e.isEnabled},a=await i.apiClient.post("/admin/api/models/create",o);return this.transformAdminModelToModel({...a,pricing:this.convertPricingToPerMillionTokens(a.pricing)},e.provider)}static async updateModel(e,t){let r=t.provider_id?parseInt(t.provider_id):null,o=await this.getModel(e,r),a={prompt:t.input_cost/1e6,completion:t.output_cost/1e6,request:t.min_cost_per_request||0,image:0,web_search:0,internal_reasoning:0},n={...o,model_id:e,provider_id:r,pricing:a};t.name&&(n.name=t.name),t.description&&(n.description=t.description),void 0!==t.contextLength&&(n.context_length=t.contextLength),void 0!==t.isEnabled&&(n.enabled=t.isEnabled);let s=await i.apiClient.post("/admin/api/models/update",{...n,pricing:this.convertPricingToPerToken(n.pricing)});return this.transformAdminModelToModel({...s,pricing:this.convertPricingToPerMillionTokens(s.pricing)},t.provider)}static async deleteModel(e,t){let r=t?parseInt(t):null;return await i.apiClient.post("/admin/api/models/delete",{model_id:e,provider_id:r}),{message:"Model deleted successfully"}}static async softDeleteModel(e,t){let r=t?parseInt(t):null,o=await this.getModel(e,r);return await i.apiClient.post("/admin/api/models/update",{model_id:e,provider_id:r,...o,enabled:!1,pricing:this.convertPricingToPerToken(o.pricing)}),{message:"Model soft deleted successfully"}}static async deleteModels(e,t){if(!t)throw Error("provider_id is required to delete models");let r=parseInt(t);for(let t of e)await this.deleteProviderModel(r,t);return{deleted_count:e.length,message:"Models deleted successfully"}}static async softDeleteModels(e,t){if(!t)throw Error("provider_id is required to soft delete models");let r=parseInt(t);for(let t of e){let e=await this.getProviderModel(r,t);await this.updateProviderModel(r,t,{...e,enabled:!1})}return{deleted_count:e.length,message:"Models soft deleted successfully"}}static async bulkUpdateModels(e,t,r){if(!r)throw Error("provider_id is required for bulk updates");let i=[],o=0,a=parseInt(r);for(let r of(console.log("Bulk update not implemented, ignoring updates:",t),e))try{let e=await this.getProviderModel(a,r);await this.updateProviderModel(a,r,e),o++}catch(t){let e=t instanceof Error?t.message:"Unknown error";i.push("Failed to update ".concat(r,": ").concat(e))}return{updated_count:o,total_count:e.length,message:"Bulk update completed",errors:i}}static async deleteAllModels(){let e=await this.getUpstreamProviders(),t=0;for(let r of e)t+=(await this.deleteAllProviderModels(r.id)).deleted;return{deleted_count:t,message:"All models deleted successfully"}}static async deleteModelsByProvider(e){return{deleted_count:(await this.deleteAllProviderModels(parseInt(e))).deleted,message:"Provider models deleted successfully"}}static async restoreModels(e,t){if(!t)throw Error("provider_id is required to restore models");let r=parseInt(t);for(let t of e){let e=await this.getProviderModel(r,t);await this.updateProviderModel(r,t,{...e,enabled:!0})}return{restored_count:e.length,message:"Models restored successfully"}}static async refreshAllModels(){return{message:"Refresh not implemented for admin API"}}static async refreshModels(e){return console.log("Refresh models not implemented for admin API, ignoring data:",e),{message:"Refresh not implemented for admin API"}}static async getOpenRouterPresets(){return(await i.apiClient.get("/admin/api/openrouter-presets")).map(e=>({...e,pricing:this.convertPricingToPerMillionTokens(e.pricing)}))}static async getSettings(){return await i.apiClient.get("/admin/api/settings")}static async updateSettings(e){return await i.apiClient.patch("/admin/api/settings",e)}static async login(e){return await i.apiClient.post("/admin/api/login",{password:e})}static async logout(){return await i.apiClient.post("/admin/api/logout",{})}}},9442:(e,t,r)=>{r.d(t,{Fc:()=>s,TN:()=>d});var i=r(3422);r(4398);var o=r(4676),a=r(9183);let n=(0,o.F)("relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current",{variants:{variant:{default:"bg-card text-card-foreground",destructive:"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90"}},defaultVariants:{variant:"default"}});function s(e){let{className:t,variant:r,...o}=e;return(0,i.jsx)("div",{"data-slot":"alert",role:"alert",className:(0,a.cn)(n({variant:r}),t),...o})}function d(e){let{className:t,...r}=e;return(0,i.jsx)("div",{"data-slot":"alert-description",className:(0,a.cn)("text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed",t),...r})}}}]);